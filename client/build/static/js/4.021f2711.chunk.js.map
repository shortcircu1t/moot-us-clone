{"version":3,"sources":["components/profile/styles.js","components/profile/components/head-info-section/styles.js","components/profile/components/head-info-section/index.js","components/profile/components/info-box/styles.js","components/profile/components/info-box/index.js","components/profile/index.js","screens/profile.js"],"names":["StyledProfileWrapper","styled","div","MEDIA_BREAKPOINT","MOBILE_BACKGROUND_HEIGHT","StyledProfileBottom","StyledUserAccounts","StyledMobileInfoSection","StyledProfileHead","StyledTextarea","textarea","theme","blueLight","StyledProfileImgWrapper","button","input","StyledUsername","p","StyledFollowCount","StyledUsernameInput","StyledErrorMessage","InfoSection","error","username","isEditMode","setIsEditMode","save","changeHandler","id","value","isLoading","token","onChange","style","marginLeft","display","onClick","className","color","size","width","logout","StyledInfoBox","StyledListItem","li","StyledP","StyledInput","InfoBox","entries","title","map","entry","i","key","Background","lazy","ProfileComponent","user","setUser","useState","setIsLoading","setError","small","useScreenSize","bio","profile","gameAccounts","streamingAccounts","img","inputs","setInputs","useEffect","avatarUrl","a","axios","post","headers","Authorization","response","updateLocalStorage","data","console","log","message","push","e","target","src","ProfileView","useUser","useToken","useSearchedUser","searchedUser","setSearchedUser","checkIfSearchedUser","history","location","pathname","split","findProfile","get","margin"],"mappings":"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","file":"static/js/4.021f2711.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport {\r\n  MEDIA_BREAKPOINT,\r\n  MOBILE_BACKGROUND_HEIGHT\r\n} from \"../../util/constants\";\r\nimport theme from \"../../theme\";\r\n\r\nexport const StyledProfileWrapper = styled.div`\r\n  position: relative;\r\n  width: 600px;\r\n  margin: 0 auto;\r\n  height: 282px;\r\n  padding: 122px 0 38px;\r\n  color: white;\r\n  z-index: 3;\r\n  @media (max-width: ${MEDIA_BREAKPOINT}px) {\r\n    width: 100%;\r\n    height: ${MOBILE_BACKGROUND_HEIGHT}px;\r\n  }\r\n`;\r\n\r\nexport const StyledProfileBottom = styled.div`\r\n  display: block;\r\n  padding: 29px 0 100px;\r\n  width: 600px;\r\n  margin: 0 auto;\r\n  color: white;\r\n  @media (max-width: ${MEDIA_BREAKPOINT}px) {\r\n    width: 100%;\r\n    text-align: center;\r\n    margin: 0 auto;\r\n  }\r\n`;\r\n\r\nexport const StyledUserAccounts = styled.div`\r\n  margin-top: 19px;\r\n  padding-top: 19px;\r\n  border-top: 1px solid #232836;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const StyledMobileInfoSection = styled.div`\r\n  width: 100%;\r\n  height: 145px;\r\n  background-color: rgba(35, 40, 51, 1);\r\n  padding: 10px 20px;\r\n`;\r\n\r\nexport const StyledProfileHead = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 332px;\r\n  /* background-color: rgb(59, 162, 46); */\r\n  background: linear-gradient(to right, #2193b0, #6dd5ed);\r\n  &:after {\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 145px;\r\n    background-image: linear-gradient(\r\n      to bottom,\r\n      rgba(35, 40, 51, 0.5),\r\n      rgba(35, 40, 51, 0.9)\r\n    );\r\n    content: \"\";\r\n  }\r\n  @media (max-width: ${MEDIA_BREAKPOINT}px) {\r\n    height: ${MOBILE_BACKGROUND_HEIGHT}px;\r\n    &:after {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledTextarea = styled.textarea`\r\n  background-color: ${theme.blueLight};\r\n  font-family: inherit;\r\n  font-size: inherit;\r\n  color: white;\r\n  outline: none;\r\n  border: none;\r\n  padding: 10px;\r\n  width: 100%;\r\n  margin: auto;\r\n  display: block;\r\n  @media (max-width: ${MEDIA_BREAKPOINT}px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nexport const StyledProfileImgWrapper = styled.div`\r\n  position: absolute;\r\n  bottom: 58px;\r\n  right: 0px;\r\n  @media (max-width: ${MEDIA_BREAKPOINT}px) {\r\n    right: 20px;\r\n    bottom: -20px;\r\n  }\r\n`;\r\n\r\nexport const StyledFileInputButton = styled.button`\r\n  position: absolute;\r\n  z-index: 10;\r\n  bottom: 0px;\r\n  right: 0px;\r\n  width: 112px;\r\n  height: 112px;\r\n  border-radius: 50%;\r\n  border: none;\r\n  cursor: pointer;\r\n  opacity: 0.7;\r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\n  background-color: ${theme.blueLight};\r\n  color: white;\r\n  outline: none;\r\n  border: none;\r\n  padding: 10px;\r\n  margin-left: 10px;\r\n  width: 100%;\r\n  margin-top: 20px;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { MEDIA_BREAKPOINT } from \"../../../../util/constants\";\r\n\r\nexport const StyledUsername = styled.p`\r\n  font-size: 27px;\r\n  width: 80%;\r\n  color: white;\r\n  font-weight: bold;\r\n  position: relative;\r\n  top: 25px;\r\n  @media (max-width: ${MEDIA_BREAKPOINT}px) {\r\n    font-size: 24px;\r\n    position: relative;\r\n    top: -45px;\r\n  }\r\n`;\r\n\r\nexport const StyledFollowCount = styled.div`\r\n  font-size: 15px;\r\n  margin-top: 38px;\r\n  @media (max-width: ${MEDIA_BREAKPOINT}px) {\r\n    margin-top: -30px;\r\n  }\r\n`;\r\n\r\nexport const StyledUsernameInput = styled.input`\r\n  background: none;\r\n  z-index: 5;\r\n  font-size: 27px;\r\n  color: white;\r\n  border: none;\r\n  outline: none;\r\n  position: relative;\r\n  top: 15px;\r\n  border-bottom: 1px solid grey;\r\n  transition: border 0.3s ease;\r\n  padding: 5px 20px 5px 20px;\r\n  &:focus {\r\n    border-bottom: 1px solid white;\r\n  }\r\n  @media (max-width: ${MEDIA_BREAKPOINT}px) {\r\n    position: relative;\r\n    top: -45px;\r\n    padding: 0px;\r\n    width: 60%;\r\n  }\r\n`;\r\n\r\nexport const StyledErrorMessage = styled.p`\r\n  word-wrap: break-word;\r\n  margin-top: 5px;\r\n  color: #ff2b4b;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { logout } from \"../../../../util/auth\";\r\n\r\nimport {\r\n  StyledUsername,\r\n  StyledFollowCount,\r\n  StyledUsernameInput,\r\n  StyledErrorMessage\r\n} from \"./styles\";\r\nimport Ellipsis from \"@bit/joshk.react-spinners-css.ellipsis\";\r\nimport {\r\n  EditButton,\r\n  SaveButton,\r\n  LogoutButton,\r\n  CancelButton\r\n} from \"../../../buttons\";\r\n\r\nfunction InfoSection({\r\n  error,\r\n  username,\r\n  isEditMode,\r\n  setIsEditMode,\r\n  save,\r\n  changeHandler,\r\n  id,\r\n  value,\r\n  isLoading,\r\n  token\r\n}) {\r\n  return (\r\n    <>\r\n      {!isEditMode ? (\r\n        <StyledUsername>{username}</StyledUsername>\r\n      ) : (\r\n        <StyledUsernameInput value={value} onChange={changeHandler} id={id} />\r\n      )}\r\n      <StyledFollowCount>\r\n        <span>0 Followers</span>\r\n        <span style={{ marginLeft: \"8px\" }}>0 Following</span>\r\n      </StyledFollowCount>\r\n      <div style={{ display: \"flex\" }}>\r\n        {!isEditMode && token && (\r\n          <EditButton onClick={() => setIsEditMode(true)}>\r\n            <i className=\"fas fa-cog\"></i> Edit\r\n          </EditButton>\r\n        )}\r\n        {isEditMode && (\r\n          <div style={{ display: \"flex\" }}>\r\n            <SaveButton onClick={save}>\r\n              {!isLoading && <i className=\"fas fa-save\"></i>}\r\n              {isLoading && <Ellipsis color=\"white\" size={20} />}\r\n              Save\r\n            </SaveButton>\r\n            <CancelButton\r\n              style={{ marginLeft: \"5px\", width: \"80px\" }}\r\n              onClick={() => setIsEditMode(false)}>\r\n              <i className=\"fas fa-window-close\"></i>\r\n              Cancel\r\n            </CancelButton>\r\n          </div>\r\n        )}\r\n        {!isEditMode && token && (\r\n          <LogoutButton\r\n            onClick={logout}\r\n            style={{ marginLeft: \"5px\", width: \"80px\" }}>\r\n            <i className=\"fas fa-sign-out-alt\"></i>\r\n            Logout\r\n          </LogoutButton>\r\n        )}\r\n      </div>\r\n      {error && isEditMode && <StyledErrorMessage>{error}</StyledErrorMessage>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default InfoSection;\r\n","import styled from \"styled-components\";\r\nimport theme from \"../../../../theme\";\r\n\r\nexport const StyledInfoBox = styled.div`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  margin: 0 0 29px 0;\r\n  h2 {\r\n    margin-bottom: 17px;\r\n    font-size: 13px;\r\n    font-weight: 500;\r\n    color: #dfe1ee;\r\n  }\r\n  p {\r\n    min-width: 0;\r\n    font-size: 13px;\r\n    font-weight: normal;\r\n    color: #8a8ca0;\r\n    display: block;\r\n    overflow: hidden;\r\n    max-width: 100%;\r\n    white-space: nowrap;\r\n    word-break: normal;\r\n    word-wrap: normal;\r\n  }\r\n`;\r\n\r\nexport const StyledListItem = styled.li`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 10px 0px;\r\n`;\r\n\r\nexport const StyledP = styled.p`\r\n  margin-left: 10px;\r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\n  background-color: ${theme.blueLight};\r\n  color: white;\r\n  outline: none;\r\n  border: none;\r\n  padding: 10px;\r\n  margin-left: 10px;\r\n  width: 300px;\r\n`;\r\n","import React from \"react\";\r\nimport { StyledInfoBox, StyledListItem, StyledP, StyledInput } from \"./styles\";\r\nimport { Icon } from \"../../../icons\";\r\n\r\nfunction InfoBox({ entries, title, isEditMode, changeHandler }) {\r\n  return (\r\n    <StyledInfoBox>\r\n      <h2>{title}</h2>\r\n      <ul>\r\n        {entries.map((entry, i) => (\r\n          <StyledListItem key={i}>\r\n            {entry.id && entry.id !== \"avatarUrl\" && <Icon id={entry.id} />}\r\n            {!isEditMode ? (\r\n              <StyledP>{entry.value || \"No info yet.\"}</StyledP>\r\n            ) : (\r\n              <StyledInput\r\n                value={entry.value}\r\n                id={entry.id}\r\n                onChange={changeHandler}\r\n              />\r\n            )}\r\n          </StyledListItem>\r\n        ))}\r\n      </ul>\r\n    </StyledInfoBox>\r\n  );\r\n}\r\n\r\nexport default InfoBox;\r\n","import React, { useState, useEffect, lazy } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { updateLocalStorage } from \"../../util/auth\";\r\nimport { useScreenSize } from \"../../context/screen-size-context\";\r\n\r\nimport {\r\n  StyledProfileHead,\r\n  StyledProfileWrapper,\r\n  StyledProfileBottom,\r\n  StyledUserAccounts,\r\n  StyledMobileInfoSection,\r\n  StyledTextarea,\r\n  StyledProfileImgWrapper\r\n} from \"./styles\";\r\nimport ProfileImg from \"../profile-img\";\r\nimport InfoSection from \"./components/head-info-section\";\r\nimport InfoBox from \"./components/info-box\";\r\nconst Background = lazy(() => import(\"./components/background\"));\r\n\r\nfunction ProfileComponent({ user, token, setUser }) {\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const { small } = useScreenSize();\r\n  const [inputs, setInputs] = useState({\r\n    bio: user.profile.bio,\r\n    username: user.username,\r\n    ...user.profile.gameAccounts,\r\n    ...user.profile.streamingAccounts,\r\n    img: {}\r\n  });\r\n\r\n  useEffect(() => {\r\n    setInputs({\r\n      bio: user.profile.bio,\r\n      username: user.username,\r\n      avatarUrl: user.profile.avatarUrl,\r\n      ...user.profile.gameAccounts,\r\n      ...user.profile.streamingAccounts\r\n    });\r\n  }, [setInputs, user]);\r\n\r\n  const save = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await axios.post(\r\n        \"/api/saveProfile\",\r\n        { ...inputs },\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        }\r\n      );\r\n      updateLocalStorage(token, response.data.user);\r\n      setUser(response.data.user);\r\n      setIsLoading(false);\r\n      setIsEditMode(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.log(error.response);\r\n      if (error.response.data.message) {\r\n        setError(error.response.data.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const gameAccounts = [];\r\n  for (let key in user.profile.gameAccounts) {\r\n    gameAccounts.push({ id: key, value: inputs[key] });\r\n  }\r\n\r\n  const streamingAccounts = [];\r\n  for (let key in user.profile.streamingAccounts) {\r\n    streamingAccounts.push({\r\n      id: key,\r\n      value: inputs[key]\r\n    });\r\n  }\r\n\r\n  const changeHandler = e => {\r\n    setInputs({ ...inputs, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <StyledProfileHead>\r\n        <Background />\r\n        <StyledProfileWrapper>\r\n          {!small && (\r\n            <InfoSection\r\n              token={token}\r\n              error={error}\r\n              username={user.username}\r\n              isEditMode={isEditMode}\r\n              setIsEditMode={setIsEditMode}\r\n              save={save}\r\n              value={inputs.username}\r\n              id=\"username\"\r\n              changeHandler={changeHandler}\r\n              isLoading={isLoading}\r\n            />\r\n          )}\r\n          <StyledProfileImgWrapper>\r\n            <ProfileImg src={user.profile.avatarUrl} size={112} />\r\n          </StyledProfileImgWrapper>\r\n        </StyledProfileWrapper>\r\n      </StyledProfileHead>\r\n      {small && (\r\n        <StyledMobileInfoSection>\r\n          <InfoSection\r\n            token={token}\r\n            error={error}\r\n            username={user.username}\r\n            isEditMode={isEditMode}\r\n            setIsEditMode={setIsEditMode}\r\n            save={save}\r\n            value={inputs.username}\r\n            id=\"username\"\r\n            changeHandler={changeHandler}\r\n            isLoading={isLoading}\r\n          />\r\n        </StyledMobileInfoSection>\r\n      )}\r\n      <StyledProfileBottom>\r\n        {!isEditMode && <div>{user.profile.bio || \"User has no bio yet.\"}</div>}\r\n        {isEditMode && (\r\n          <StyledTextarea value={inputs.bio} onChange={changeHandler} id=\"bio\">\r\n            {inputs.bio}\r\n          </StyledTextarea>\r\n        )}\r\n\r\n        <StyledUserAccounts>\r\n          {isEditMode && (\r\n            <InfoBox\r\n              entries={[{ value: inputs.avatarUrl, id: \"avatarUrl\" }]}\r\n              title=\"Avatar URL\"\r\n              isEditMode={isEditMode}\r\n              changeHandler={changeHandler}\r\n            />\r\n          )}\r\n          {!isEditMode && (\r\n            <InfoBox\r\n              entries={[{ value: \"Joined Moot November 10, 2019\", id: \"user\" }]}\r\n              title=\"Sign up date\"\r\n              changeHandler={changeHandler}\r\n            />\r\n          )}\r\n          <InfoBox\r\n            entries={streamingAccounts}\r\n            title=\"Streaming Accounts\"\r\n            isEditMode={isEditMode}\r\n            changeHandler={changeHandler}\r\n          />\r\n          <InfoBox\r\n            entries={gameAccounts}\r\n            title=\"Game Accounts\"\r\n            isEditMode={isEditMode}\r\n            changeHandler={changeHandler}\r\n          />\r\n        </StyledUserAccounts>\r\n      </StyledProfileBottom>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProfileComponent;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { useUser, useToken, useSearchedUser } from \"../context\";\r\nimport history from \"../util/history\";\r\n\r\nimport ProfileComponent from \"../components/profile\";\r\nimport Head from \"../components/head\";\r\nimport Orbitals from \"@bit/joshk.react-spinners-css.orbitals\";\r\n\r\nfunction ProfileView() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { user, setUser } = useUser();\r\n  const { token } = useToken();\r\n  const { searchedUser, setSearchedUser } = useSearchedUser();\r\n  const checkIfSearchedUser = () => {\r\n    return history.location.pathname.split(\"/\")[1] === \"users\";\r\n  };\r\n  const findProfile = async () => {\r\n    if (\r\n      !searchedUser.username &&\r\n      history.location.pathname.split(\"/\")[1] === \"users\"\r\n    ) {\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await axios.get(\r\n          `/api/profile/${history.location.pathname.split(\"/\")[2]}`\r\n        );\r\n        setSearchedUser(response.data);\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    findProfile();\r\n  });\r\n  return (\r\n    <>\r\n      <Head\r\n        title={`${\r\n          checkIfSearchedUser() ? searchedUser.username : user.username\r\n        }'s profile`}\r\n      />\r\n      {isLoading && (\r\n        <Orbitals color=\"white\" style={{ display: \"block\", margin: \"auto\" }} />\r\n      )}\r\n      {!isLoading && (\r\n        <ProfileComponent\r\n          user={checkIfSearchedUser() ? searchedUser : user}\r\n          setUser={setUser}\r\n          token={!checkIfSearchedUser() ? token : null}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProfileView;\r\n"],"sourceRoot":""}